
[general]
	#If the shield hearts should be rendered or not if you have a shield
	render_shield_hud = true

	[general.utils]

		[general.utils.sleipnirs_grace]
			#Range: 0.0 ~ 1.7976931348623157E308
			cap = 100.0
			#Range: 0.0 ~ 1.7976931348623157E308
			speed_gain = 1.0
			#Range: 0.0 ~ 1.7976931348623157E308
			max = 100.0
			#Range: 0.0 ~ 1.7976931348623157E308
			path_bonus = 5.0

			[general.utils.sleipnirs_grace."General Settings"]
				#If the Enchantment is Obtainable
				enabled = true
				#If the Enchantment has any effect
				activated = true
				#If the Enchantment is discoverable
				discoverable = true
				#Minimum Enchantment Level
				#Range: > 0
				min_level = 1
				#Maximum Enchantment Level
				#Range: > 0
				max_level = 10
				#Rarity of the Enchantment
				#Allowed Values: COMMON, UNCOMMON, RARE, VERY_RARE
				rarity = "RARE"
				#If the Enchantment is a Treasure
				treasure = true
				#If the Enchantment is Tradeable by Villagers
				tradeable = true
				#If the Enchantment can be on books
				canBeOnBook = true
				#Minimum Level for Enchanting
				#Range: > 0
				base_cost = 20
				#Increase of levels per Enchantment Level
				#Range: > 0
				per_level_cost = 14
				#The Additional Upper Range of Required Levels
				#Range: > 0
				cost_limit = 75
				#Hard Limit of where the Enchantment will be capped even if the level is higher
				#Range: > 0
				hard_cap = 100
				#Enchantments that are not compatible with this Enchantment
				incompats = []
				#Allows to add custom incompatible Items
				incompatible_items = []
				#Allows to add custom compatible Items
				compatible_items = []

		[general.utils.famines_odium]
			#Range: > 0
			delay = 1200
			#Range: 0.0 ~ 1.7976931348623157E308
			damage = 0.0062500000931322575
			food_black_list = []

			[general.utils.famines_odium."General Settings"]
				#If the Enchantment is Obtainable
				enabled = true
				#If the Enchantment has any effect
				activated = true
				#If the Enchantment is discoverable
				discoverable = true
				#Minimum Enchantment Level
				#Range: > 0
				min_level = 1
				#Maximum Enchantment Level
				#Range: > 0
				max_level = 2
				#Rarity of the Enchantment
				#Allowed Values: COMMON, UNCOMMON, RARE, VERY_RARE
				rarity = "VERY_RARE"
				#If the Enchantment is a Treasure
				treasure = true
				#If the Enchantment is Tradeable by Villagers
				tradeable = true
				#If the Enchantment can be on books
				canBeOnBook = true
				#Minimum Level for Enchanting
				#Range: > 0
				base_cost = 10
				#Increase of levels per Enchantment Level
				#Range: > 0
				per_level_cost = 4
				#The Additional Upper Range of Required Levels
				#Range: > 0
				cost_limit = 40
				#Hard Limit of where the Enchantment will be capped even if the level is higher
				#Range: > 0
				hard_cap = 100
				#Enchantments that are not compatible with this Enchantment
				incompats = []
				#Allows to add custom incompatible Items
				incompatible_items = []
				#Allows to add custom compatible Items
				compatible_items = []

		[general.utils.thick_pick]
			#Range: 0.0 ~ 1.7976931348623157E308
			speed_base = 2.25
			#Range: 0.0 ~ 1.7976931348623157E308
			speed_level = 1.25
			items = ["minecraft:diamond;5"]

			[general.utils.thick_pick."General Settings"]
				#If the Enchantment is Obtainable
				enabled = true
				#If the Enchantment has any effect
				activated = true
				#If the Enchantment is discoverable
				discoverable = true
				#Minimum Enchantment Level
				#Range: > 0
				min_level = 1
				#Maximum Enchantment Level
				#Range: > 0
				max_level = 2
				#Rarity of the Enchantment
				#Allowed Values: COMMON, UNCOMMON, RARE, VERY_RARE
				rarity = "RARE"
				#If the Enchantment is a Treasure
				treasure = false
				#If the Enchantment is Tradeable by Villagers
				tradeable = true
				#If the Enchantment can be on books
				canBeOnBook = true
				#Minimum Level for Enchanting
				#Range: > 0
				base_cost = 26
				#Increase of levels per Enchantment Level
				#Range: > 0
				per_level_cost = 4
				#The Additional Upper Range of Required Levels
				#Range: > 0
				cost_limit = 75
				#Hard Limit of where the Enchantment will be capped even if the level is higher
				#Range: > 0
				hard_cap = 100
				#Defines the Required XP level to trigger the Trancendence Effect
				#Range: > 1
				trancendence = 500
				#Enchantments that are not compatible with this Enchantment
				incompats = []
				#Allows to add custom incompatible Items
				incompatible_items = []
				#Allows to add custom compatible Items
				compatible_items = []

		[general.utils.rocket_man]
			#Range: 0.0 ~ 1.7976931348623157E308
			duration_base = 0.05
			#Range: 0.0 ~ 1.7976931348623157E308
			duration_level = 0.15

			[general.utils.rocket_man."General Settings"]
				#If the Enchantment is Obtainable
				enabled = true
				#If the Enchantment has any effect
				activated = true
				#If the Enchantment is discoverable
				discoverable = true
				#Minimum Enchantment Level
				#Range: > 0
				min_level = 1
				#Maximum Enchantment Level
				#Range: > 0
				max_level = 3
				#Rarity of the Enchantment
				#Allowed Values: COMMON, UNCOMMON, RARE, VERY_RARE
				rarity = "VERY_RARE"
				#If the Enchantment is a Treasure
				treasure = true
				#If the Enchantment is Tradeable by Villagers
				tradeable = true
				#If the Enchantment can be on books
				canBeOnBook = true
				#Minimum Level for Enchanting
				#Range: > 0
				base_cost = 25
				#Increase of levels per Enchantment Level
				#Range: > 0
				per_level_cost = 4
				#The Additional Upper Range of Required Levels
				#Range: > 0
				cost_limit = 20
				#Hard Limit of where the Enchantment will be capped even if the level is higher
				#Range: > 0
				hard_cap = 100
				#Enchantments that are not compatible with this Enchantment
				incompats = []
				#Allows to add custom incompatible Items
				incompatible_items = []
				#Allows to add custom compatible Items
				compatible_items = []

		[general.utils.climber]
			#Range: > 0
			min_delay = 10
			climb_speed = ["minecraft:ladder;2", "minecraft:vine;5", "minecraft:scaffolding;5"]

			[general.utils.climber."General Settings"]
				#If the Enchantment is Obtainable
				enabled = true
				#If the Enchantment has any effect
				activated = true
				#If the Enchantment is discoverable
				discoverable = true
				#Minimum Enchantment Level
				#Range: > 0
				min_level = 1
				#Maximum Enchantment Level
				#Range: > 0
				max_level = 3
				#Rarity of the Enchantment
				#Allowed Values: COMMON, UNCOMMON, RARE, VERY_RARE
				rarity = "UNCOMMON"
				#If the Enchantment is a Treasure
				treasure = true
				#If the Enchantment is Tradeable by Villagers
				tradeable = true
				#If the Enchantment can be on books
				canBeOnBook = true
				#Minimum Level for Enchanting
				#Range: > 0
				base_cost = 14
				#Increase of levels per Enchantment Level
				#Range: > 0
				per_level_cost = 8
				#The Additional Upper Range of Required Levels
				#Range: > 0
				cost_limit = 30
				#Hard Limit of where the Enchantment will be capped even if the level is higher
				#Range: > 0
				hard_cap = 100
				#Enchantments that are not compatible with this Enchantment
				incompats = []
				#Allows to add custom incompatible Items
				incompatible_items = []
				#Allows to add custom compatible Items
				compatible_items = []

		[general.utils.phanes_regret]
			#Range: 0.0 ~ 1.7976931348623157E308
			deny_percent = 0.105

			[general.utils.phanes_regret."General Settings"]
				#If the Enchantment is Obtainable
				enabled = true
				#If the Enchantment has any effect
				activated = true
				#If the Enchantment is discoverable
				discoverable = true
				#Minimum Enchantment Level
				#Range: > 0
				min_level = 1
				#Maximum Enchantment Level
				#Range: > 0
				max_level = 2
				#Rarity of the Enchantment
				#Allowed Values: COMMON, UNCOMMON, RARE, VERY_RARE
				rarity = "RARE"
				#If the Enchantment is a Treasure
				treasure = true
				#If the Enchantment is Tradeable by Villagers
				tradeable = true
				#If the Enchantment can be on books
				canBeOnBook = true
				#Minimum Level for Enchanting
				#Range: > 0
				base_cost = 40
				#Increase of levels per Enchantment Level
				#Range: > 0
				per_level_cost = 2
				#The Additional Upper Range of Required Levels
				#Range: > 0
				cost_limit = 75
				#Hard Limit of where the Enchantment will be capped even if the level is higher
				#Range: > 0
				hard_cap = 100
				#Enchantments that are not compatible with this Enchantment
				incompats = []
				#Allows to add custom incompatible Items
				incompatible_items = []
				#Allows to add custom compatible Items
				compatible_items = []

		[general.utils.poseidons_soul]

			[general.utils.poseidons_soul."General Settings"]
				#If the Enchantment is Obtainable
				enabled = true
				#If the Enchantment has any effect
				activated = true
				#If the Enchantment is discoverable
				discoverable = true
				#Minimum Enchantment Level
				#Range: > 0
				min_level = 1
				#Maximum Enchantment Level
				#Range: > 0
				max_level = 3
				#Rarity of the Enchantment
				#Allowed Values: COMMON, UNCOMMON, RARE, VERY_RARE
				rarity = "RARE"
				#If the Enchantment is a Treasure
				treasure = true
				#If the Enchantment is Tradeable by Villagers
				tradeable = false
				#If the Enchantment can be on books
				canBeOnBook = true
				#Minimum Level for Enchanting
				#Range: > 0
				base_cost = 24
				#Increase of levels per Enchantment Level
				#Range: > 0
				per_level_cost = 4
				#The Additional Upper Range of Required Levels
				#Range: > 0
				cost_limit = 75
				#Hard Limit of where the Enchantment will be capped even if the level is higher
				#Range: > 0
				hard_cap = 40
				#Enchantments that are not compatible with this Enchantment
				incompats = []
				#Allows to add custom incompatible Items
				incompatible_items = []
				#Allows to add custom compatible Items
				compatible_items = []

		[general.utils.mounting_aegis]

			[general.utils.mounting_aegis."General Settings"]
				#If the Enchantment is Obtainable
				enabled = true
				#If the Enchantment has any effect
				activated = true
				#If the Enchantment is discoverable
				discoverable = true
				#Minimum Enchantment Level
				#Range: > 0
				min_level = 1
				#Maximum Enchantment Level
				#Range: > 0
				max_level = 1
				#Rarity of the Enchantment
				#Allowed Values: COMMON, UNCOMMON, RARE, VERY_RARE
				rarity = "RARE"
				#If the Enchantment is a Treasure
				treasure = true
				#If the Enchantment is Tradeable by Villagers
				tradeable = true
				#If the Enchantment can be on books
				canBeOnBook = true
				#Minimum Level for Enchanting
				#Range: > 0
				base_cost = 24
				#Increase of levels per Enchantment Level
				#Range: > 0
				per_level_cost = 4
				#The Additional Upper Range of Required Levels
				#Range: > 0
				cost_limit = 20
				#Hard Limit of where the Enchantment will be capped even if the level is higher
				#Range: > 0
				hard_cap = 100
				#Enchantments that are not compatible with this Enchantment
				incompats = []
				#Allows to add custom incompatible Items
				incompatible_items = []
				#Allows to add custom compatible Items
				compatible_items = []

		[general.utils.demeters_blessing]

			[general.utils.demeters_blessing."General Settings"]
				#If the Enchantment is Obtainable
				enabled = true
				#If the Enchantment has any effect
				activated = true
				#If the Enchantment is discoverable
				discoverable = true
				#Minimum Enchantment Level
				#Range: > 0
				min_level = 1
				#Maximum Enchantment Level
				#Range: > 0
				max_level = 2
				#Rarity of the Enchantment
				#Allowed Values: COMMON, UNCOMMON, RARE, VERY_RARE
				rarity = "VERY_RARE"
				#If the Enchantment is a Treasure
				treasure = false
				#If the Enchantment is Tradeable by Villagers
				tradeable = true
				#If the Enchantment can be on books
				canBeOnBook = true
				#Minimum Level for Enchanting
				#Range: > 0
				base_cost = 12
				#Increase of levels per Enchantment Level
				#Range: > 0
				per_level_cost = 8
				#The Additional Upper Range of Required Levels
				#Range: > 0
				cost_limit = 75
				#Hard Limit of where the Enchantment will be capped even if the level is higher
				#Range: > 0
				hard_cap = 100
				#Enchantments that are not compatible with this Enchantment
				incompats = ["uniqueutil:demeters_soul"]
				#Allows to add custom incompatible Items
				incompatible_items = []
				#Allows to add custom compatible Items
				compatible_items = []

		[general.utils.ambrosia]
			#Range: > 0
			base_duration = 600
			#Range: > 0
			duration_multiplier = 40
			healing_enabled = true

			[general.utils.ambrosia."General Settings"]
				#If the Enchantment is Obtainable
				enabled = true
				#If the Enchantment has any effect
				activated = true
				#If the Enchantment is discoverable
				discoverable = true
				#Minimum Enchantment Level
				#Range: > 0
				min_level = 1
				#Maximum Enchantment Level
				#Range: > 0
				max_level = 4
				#Rarity of the Enchantment
				#Allowed Values: COMMON, UNCOMMON, RARE, VERY_RARE
				rarity = "RARE"
				#If the Enchantment is a Treasure
				treasure = true
				#If the Enchantment is Tradeable by Villagers
				tradeable = true
				#If the Enchantment can be on books
				canBeOnBook = true
				#Minimum Level for Enchanting
				#Range: > 0
				base_cost = 8
				#Increase of levels per Enchantment Level
				#Range: > 0
				per_level_cost = 12
				#The Additional Upper Range of Required Levels
				#Range: > 0
				cost_limit = 10
				#Hard Limit of where the Enchantment will be capped even if the level is higher
				#Range: > 0
				hard_cap = 100
				#Enchantments that are not compatible with this Enchantment
				incompats = []
				#Allows to add custom incompatible Items
				incompatible_items = []
				#Allows to add custom compatible Items
				compatible_items = []

		[general.utils.essence_of_slime]
			#Range: 0.0 ~ 1.7976931348623157E308
			durability_loss = 3.0
			#Range: 0.0 ~ 1.7976931348623157E308
			fall_distance_multiplier = 3.0

			[general.utils.essence_of_slime."General Settings"]
				#If the Enchantment is Obtainable
				enabled = true
				#If the Enchantment has any effect
				activated = true
				#If the Enchantment is discoverable
				discoverable = true
				#Minimum Enchantment Level
				#Range: > 0
				min_level = 1
				#Maximum Enchantment Level
				#Range: > 0
				max_level = 5
				#Rarity of the Enchantment
				#Allowed Values: COMMON, UNCOMMON, RARE, VERY_RARE
				rarity = "VERY_RARE"
				#If the Enchantment is a Treasure
				treasure = true
				#If the Enchantment is Tradeable by Villagers
				tradeable = false
				#If the Enchantment can be on books
				canBeOnBook = true
				#Minimum Level for Enchanting
				#Range: > 0
				base_cost = 15
				#Increase of levels per Enchantment Level
				#Range: > 0
				per_level_cost = 5
				#The Additional Upper Range of Required Levels
				#Range: > 0
				cost_limit = 10
				#Hard Limit of where the Enchantment will be capped even if the level is higher
				#Range: > 0
				hard_cap = 100
				#Enchantments that are not compatible with this Enchantment
				incompats = []
				#Allows to add custom incompatible Items
				incompatible_items = []
				#Allows to add custom compatible Items
				compatible_items = []

		[general.utils.adept]
			#Range: 0.0 ~ 1.7976931348623157E308
			speed_scale = 1.0

			[general.utils.adept."General Settings"]
				#If the Enchantment is Obtainable
				enabled = true
				#If the Enchantment has any effect
				activated = true
				#If the Enchantment is discoverable
				discoverable = true
				#Minimum Enchantment Level
				#Range: > 0
				min_level = 1
				#Maximum Enchantment Level
				#Rang