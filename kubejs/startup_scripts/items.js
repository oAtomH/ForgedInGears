StartupEvents.registry('item', event => {
event.create('forgedingears:andesite_alloy_sheet')
	.texture('forgedingears:item/andesite_alloy_sheet')
event.create('forgedingears:andesite_alloy_mixture')
	.texture('forgedingears:item/andesite_alloy_mixture')
event.create('forgedingears:andesite_alloy_nugget')
	.texture('forgedingears:item/andesite_alloy_nugget')
event.create('forgedingears:andesite_powder')
	.texture('forgedingears:item/andesite_powder')
event.create('forgedingears:incomplete_copper_mechanism', 'create:sequenced_assembly')
	.texture('forgedingears:item/incomplete_copper_mechanism')
event.create('forgedingears:copper_mechanism')
	.texture('forgedingears:item/copper_mechanism')
event.create('forgedingears:incomplete_steel_mechanism', 'create:sequenced_assembly')
	.texture('forgedingears:item/incomplete_steel_mechanism')
event.create('forgedingears:steel_mechanism')
	.texture('forgedingears:item/steel_mechanism')
event.create('forgedingears:oak_lumber')
	.texture('forgedingears:item/oak_lumber')
event.create('forgedingears:dark_oak_lumber')
	.texture('forgedingears:item/dark_oak_lumber')
event.create('forgedingears:acacia_lumber')
	.texture('forgedingears:item/acacia_lumber')
event.create('forgedingears:birch_lumber')
	.texture('forgedingears:item/birch_lumber')
event.create('forgedingears:spruce_lumber')
	.texture('forgedingears:item/spruce_lumber')
event.create('forgedingears:jungle_lumber')
	.texture('forgedingears:item/jungle_lumber')
event.create('forgedingears:crimson_lumber')
	.texture('forgedingears:item/crimson_lumber')
event.create('forgedingears:warped_lumber')
	.texture('forgedingears:item/warped_lumber')
event.create('forgedingears:mangrove_lumber')
	.texture('forgedingears:item/mangrove_lumber')
event.create('forgedingears:greenheart_lumber')
	.texture('forgedingears:item/greenheart_lumber')
event.create('forgedingears:skyroot_lumber')
	.texture('forgedingears:item/skyroot_lumber')
event.create('forgedingears:bloodshroom_lumber')
	.texture('forgedingears:item/bloodshroom_lumber')
event.create('forgedingears:enderbark_lumber')
	.texture('forgedingears:item/enderbark_lumber')
event.create('forgedingears:nahuatl_lumber')
	.texture('forgedingears:item/nahuatl_lumber')
event.create('forgedingears:blazewood_lumber')
	.texture('forgedingears:item/blazewood_lumber')
event.create('forgedingears:mud_bottle')
	.texture('forgedingears:item/mud_bottle')
event.create('forgedingears:glass_batch')
	.texture('forgedingears:item/glass_batch')
event.create('forgedingears:aluminum_sheet')
	.texture('forgedingears:item/aluminum_sheet')
event.create('forgedingears:obsidian_quartz')
	.texture('forgedingears:item/obsidian_quartz')
event.create('forgedingears:polished_obsidian_quartz')
	.texture('forgedingears:item/polished_obsidian_quartz')
event.create('forgedingears:obsidian_tube')
	.texture('forgedingears:item/obsidian_tube')
event.create('forgedingears:incomplete_obsidian_tube', 'create:sequenced_assembly')
	.texture('forgedingears:item/incomplete_obsidian_tube')
event.create('forgedingears:plant_cordage')
	.texture('forgedingears:item/plant_cordage')
event.create('forgedingears:aluminosilicate_bit')
	.texture('forgedingears:item/aluminosilicate_bit')
event.create('forgedingears:aluminosilicate_catalyst')
	.texture('forgedingears:item/aluminosilicate_catalyst')
event.create('forgedingears:aluminosilicate_chunk')
	.texture('forgedingears:item/aluminosilicate_chunk')
event.create('forgedingears:blue_meth')
	.texture('forgedingears:item/blue_meth')
event.create('forgedingears:copper_zinc_catalyst')
	.texture('forgedingears:item/copper_zinc_catalyst')
event.create('forgedingears:copper_dust')
	.texture('forgedingears:item/copper_dust')
event.create('forgedingears:zinc_dust')
	.texture('forgedingears:item/zinc_dust')
event.create('forgedingears:cyanide')
	.texture('forgedingears:item/cyanide')
event.create('forgedingears:ephedra')
	.texture('forgedingears:item/ephedra')
event.create('forgedingears:iodine')
	.texture('forgedingears:item/iodine')
event.create('forgedingears:match')
	.texture('forgedingears:item/match')
event.create('forgedingears:pseudophedrine')
	.texture('forgedingears:item/pseudophedrine')
event.create('forgedingears:red_phosphorus')
	.texture('forgedingears:item/red_phosphorus')
event.create('forgedingears:sudafed')
	.texture('forgedingears:item/sudafed')
event.create('forgedingears:sudafed_box')
	.texture('forgedingears:item/sudafed_box')
event.create('forgedingears:white_meth')
	.texture('forgedingears:item/white_meth')
event.create('forgedingears:white_phosphorus')
	.texture('forgedingears:item/white_phosphorus')
event.create('forgedingears:calcium_carbonate')
	.texture('forgedingears:item/calcium_carbonate')
event.create('forgedingears:saltpeter')
	.texture('forgedingears:item/saltpeter')
event.create('forgedingears:charcoal_powder')
	.texture('forgedingears:item/charcoal_powder')
	.burnTime(200)
event.create('forgedingears:steel_ingot')
	.texture('forgedingears:item/steel_ingot')
	.tag('forge:ingots/steel')
event.create('forgedingears:steel_nugget')
	.texture('forgedingears:item/steel_nugget')
	.tag('forge:nuggets/steel')
event.create('forgedingears:steel_sheet')
	.texture('forgedingears:item/steel_sheet')
	.tag('forge:plates/steel')
event.create('forgedingears:bronze_ingot')
	.texture('forgedingears:item/bronze_ingot')
	.tag('forge:ingots/bronze')
event.create('forgedingears:bronze_nugget')
	.texture('forgedingears:item/bronze_nugget')
	.tag('forge:nuggets/bronze')
event.create('forgedingears:leather_strip')
	.texture('forgedingears:item/leather_strip')
event.create('forgedingears:small_leather_hide')
	.texture('forgedingears:item/small_leather_hide')
event.create('forgedingears:small_cured_leather_hide')
	.texture('forgedingears:item/small_cured_leather_hide')
event.create('forgedingears:small_soaked_leather_hide')
	.texture('forgedingears:item/small_soaked_leather_hide')
event.create('forgedingears:small_limed_leather_hide')
	.texture('forgedingears:item/small_limed_leather_hide')
event.create('forgedingears:small_scraped_leather_hide')
	.texture('forgedingears:item/small_scraped_leather_hide')
event.create('forgedingears:small_tanned_leather_hide')
	.texture('forgedingears:item/small_tanned_leather_hide')
event.create('forgedingears:small_leather_sheet')
	.texture('forgedingears:item/small_leather_sheet')
event.create('forgedingears:leather_hide')
	.texture('forgedingears:item/leather_hide')
event.create('forgedingears:cured_leather_hide')
	.texture('forgedingears:item/cured_leather_hide')
event.create('forgedingears:soaked_leather_hide')
	.texture('forgedingears:item/soaked_leather_hide')
event.create('forgedingears:limed_leather_hide')
	.texture('forgedingears:item/limed_leather_hide')
event.create('forgedingears:scraped_leather_hide')
	.texture('forgedingears:item/scraped_leather_hide')
event.create('forgedingears:tanned_leather_hide')
	.texture('forgedingears:item/tanned_leather_hide')
event.create('forgedingears:leather_sheet')
	.texture('forgedingears:item/leather_sheet')
event.create('forgedingears:large_leather_hide')
	.texture('forgedingears:item/large_leather_hide')
event.create('forgedingears:large_cured_leather_hide')
	.texture('forgedingears:item/large_cured_leather_hide')
event.create('forgedingears:large_soaked_leather_hide')
	.texture('forgedingears:item/large_soaked_leather_hide')
event.create('forgedingears:large_limed_leather_hide')
	.texture('forgedingears:item/large_limed_leather_hide')
event.create('forgedingears:large_scraped_leather_hide')
	.texture('forgedingears:item/large_scraped_leather_hide')
event.create('forgedingears:large_tanned_leather_hide')
	.texture('forgedingears:item/large_tanned_leather_hide')
event.create('forgedingears:large_leather_sheet')
	.texture('forgedingears:item/large_leather_sheet')
event.create('forgedingears:processed_fire_dragon_flesh')
	.texture('forgedingears:item/processed_fire_dragon_flesh')
event.create('forgedingears:unstable_fire_dragon_heart')
	.texture('forgedingears:item/unstable_fire_dragon_heart')
event.create('forgedingears:mechanical_fire_dragon_heart')
	.texture('forgedingears:item/mechanical_fire_dragon_heart')
event.create('forgedingears:processed_ice_dragon_flesh')
	.texture('forgedingears:item/processed_ice_dragon_flesh')
event.create('forgedingears:unstable_ice_dragon_heart')
	.texture('forgedingears:item/unstable_ice_dragon_heart')
event.create('forgedingears:mechanical_ice_dragon_heart')
	.texture('forgedingears:item/mechanical_ice_dragon_heart')
event.create('forgedingears:processed_lightning_dragon_flesh')
	.texture('forgedingears:item/processed_lightning_dragon_flesh')
event.create('forgedingears:unstable_lightning_dragon_heart')
	.texture('forgedingears:item/unstable_lightning_dragon_heart')
event.create('forgedingears:mechanical_lightning_dragon_heart')
	.texture('forgedingears:item/mechanical_lightning_dragon_heart')
	}
)
StartupEvents.registry('block', event => {
  	event.create('forgedingears:grout_bricks')
       .material('dirt')
       .hardness(1)
       .tagBlock('minecraft:mineable/shovel')
  	event.create('forgedingears:grout_glass')
	   .material('sand')
	   .hardness(2)
	   .renderType('cutout')
	   .lightLevel(1)
	   .defaultCutout()
  	event.create('forgedingears:empty_dragonforge_fire_core')
		.material('stone')
		.hardness(5)
		.tagBlock('minecraft:mineable/pickaxe')
  	event.create('forgedingears:empty_dragonforge_ice_core')
		.material('stone')
		.hardness(5)
		.tagBlock('minecraft:mineable/pickaxe')
  	event.create('forgedingears:empty_dragonforge_lightning_core')
		.material('stone')
		.hardness(5)
		.tagBlock('minecraft:mineable/pickaxe')
	event.create('forgedingears:steel_block')
		.material('metal')
		.hardness(10)
		.tagBlock('minecraft:minable/pickaxe')
		.tagBlock('forge:storage_blocks/steel')
	event.create('forgedingears:bronze_block')
		.material('metal')
		.hardness(10)
		.tagBlock('minecraft:minable/pickaxe')
		.tagBlock('forge:storage_blocks/bronze')
})
StartupEvents.registry('block', event => {
	event.create('forgedingears:red_beryl_ore')
		 .material('stone')
		 .hardness(10)
		 .tagBlock('minecraft:mineable/pickaxe')
		 .tagBlock('forge:ores/red_beryl')
		 .tagBlock('forge:ores')
		 .tagBlock('minecraft:needs_diamond_tool')
		 .tagItem('forge:ores')
		 .tagItem('forge:ores/red_beryl')
	event.create('forgedingears:hureaulite_ore')
		 .material('stone')
		 .hardness(10)
		 .tagBlock('minecraft:mineable/pickaxe')
		 .tagBlock('forge:ores/hureaulite')
		 .tagBlock('forge:ores')
		 .tagBlock('minecraft:needs_diamond_tool')
		 .tagItem('forge:ores')
		 .tagItem('forge:ores/hureaulite')
	event.create('forgedingears:epidote_ore')
		 .material('stone')
		 .hardness(10)
		 .tagBlock('minecraft:mineable/pickaxe')
		 .tagBlock('forge:ores/epidote')
		 .tagBlock('forge:ores')
		 .tagBlock('minecraft:needs_diamond_tool')
		 .tagItem('forge:ores')
		 .tagItem('forge:ores/epidote')
  })
StartupEvents.registry('block', event => {
	event.create('forgedingears:tuff_red_beryl_ore')
		 .material('stone')
		 .hardness(12)
		 .tagBlock('minecraft:mineable/pickaxe')
		 .tagBlock('forge:ores/red_beryl')
		 .tagBlock('forge:ores')
		 .tagBlock('minecraft:needs_diamond_tool')
		 .tagItem('forge:ores')
		 .tagItem('forge:ores/red_beryl')
	event.create('forgedingears:tuff_hureaulite_ore')
		 .material('stone')
		 .hardness(12)
		 .tagBlock('minecraft:mineable/pickaxe')
		 .tagBlock('forge:ores/hureaulite')
		 .tagBlock('forge:ores')
		 .tagBlock('minecraft:needs_diamond_tool')
		 .tagItem('forge:ores')
		 .tagItem('forge:ores/hureaulite')
	event.create('forgedingears:tuff_epidote_ore')
		 .material('stone')
		 .hardness(12)
		 .tagBlock('minecraft:mineable/pickaxe')
		 .tagBlock('forge:ores/epidote')
		 .tagBlock('forge:ores')
		 .tagBlock('minecraft:needs_diamond_tool')
		 .tagItem('forge:ores')
		 .tagItem('forge:ores/epidote')
  })


StartupEvents.registry('block', event => {
    event.create('forgedingears:ephedra', 'crop')
        //Set the max age of the crop, and the box shape of each age
        .age(3, builder => {
            builder
                .shape(0, 0, 0, 0, 16, 2, 16)
                .shape(1, 0, 0, 0, 16, 4, 16)
                .shape(2, 0, 0, 0, 16, 8, 16)
                .shape(3, 0, 0, 0, 16, 16, 16)
        })
        //Returns if the crop can survive under the given condition
        //Used to determine if seeds can be planted, crops will decay etc.
		.survive((state, level, pos) => {
			const FARMLAND = Java.loadClass('net.minecraft.world.level.block.FarmBlock')
			let blockState = level.getBlockState(pos.below())
			let mcBlock = blockState.block
			if (mcBlock instanceof FARMLAND) {
				return true
			}
			else return false
		})
        //When a random tick hits the crop, and the crop is about to grow
        //Normal randomTick event is disabled and warned as this overrides that to keep consistency
        //The returned value is the chance for crop to grow for this tick, calculated as chance = f/(25+f), when f > 25 chance = 1
        .growTick((tickevent) => 25)
        //When a bonemeal-like thing is about to trigger growth.
        //Returns how many ages should this bonemeal application advances
        .bonemeal(info => {
            let pos = info.block.pos;
            info.level.createExplosion(pos.x, pos.y, pos.z).strength(4).explode();
            return 0;
        })
        //If the seed will be dropped by the crop
        //Setting this will disable seed drops in loot table, and make the crop seed becomes Items.AIR (does not effect the seed item)
        //In info mods like TOP, no seed will be shown if no seed is dropped, however, auto-harvesting by resetting crop age is unaffected.
        .dropSeed(true)
        //The product of the crop, specifying multiple will result in independent drops
        //Function as how vanilla does, thus fortune will not effect this
        //Must not be an ItemStack instance, as items are not registered yet here
        .crop('forgedingears:ephedra', 0.5)
        //Specify the texture of corresponding age
        .texture(0, 'forgedingears:block/ephedra_crop_0')
        .texture(1, 'forgedingears:block/ephedra_crop_1')
        .texture(2, 'forgedingears:block/ephedra_crop_2')
        .texture(3, 'forgedingears:block/ephedra_crop_3')
        .item((seedItem) => {
            seedItem.texture('forgedingears:item/ephedra_seed')
        })
})
ItemEvents.modification(event => {
    event.modify('create:red_sand_paper', item => {
        item.maxDamage = 16
    })
    event.modify('create:sand_paper', item => {
        item.maxDamage = 8
    })
	event.modify('tinkersurvival:crude_hatchet', item => {
        item.maxDamage = 5
        item.digSpeed= 0.15
	})
	event.modify('forgedingears:blue_meth', item => {
		item.setFoodProperties(food => {
		  food.alwaysEdible(true)
		  food.hunger(7)
		  food.saturation(1)
		  food.fastToEat(true)
		  food.effect('minecraft:strength', 18000, 2, 1)
		  food.effect('minecraft:speed', 20000, 1, 1)
		  food.effect('minecraft:slowness', 8000, 4, 1)
		  food.effect('minecraft:nausea', 8000, 2, 1)
		  food.effect('minecraft:resistance', 8000, 0, 1)
		})
	})
	event.modify('forgedingears:white_meth', item => {
		item.setFoodProperties(food => {
		  food.alwaysEdible()
		  food.hunger(5)
		  food.saturation(1)
		  food.fastToEat(true)
		  food.effect('minecraft:strength', 9000, 1, 1)
		  food.effect('minecraft:speed', 10000, 0, 1)
		  food.effect('minecraft:slowness', 5000, 3, 1)
		  food.effect('minecraft:nausea', 5000, 2, 1)
		})
	})
})
StartupEvents.registry('item', event => {
event.create('tconstruct:copper_can_0')
	.texture('forgedingears:item/copper_can_0')
event.create('tconstruct:copper_can_1')
	.texture('forgedingears:item/copper_can_1')
event.create('tconstruct:copper_can_2')
    .texture('forgedingears:item/copper_can_2')
event.create('tconstruct:copper_can_3')
    .texture('forgedingears:item/copper_can_3')
event.create('tconstruct:copper_can_4')
    .texture('forgedingears:item/copper_can_4')
event.create('tconstruct:copper_can_5')
    .texture('forgedingears:item/copper_can_5')
})
StartupEvents.registry('item', event => {
event.create('minecraft:bucket_0')
	.texture('forgedingears:item/bucket_0')
event.create('minecraft:bucket_1')
	.texture('forgedingears:item/bucket_1')
event.create('minecraft:bucket_2')
    .texture('forgedingears:item/bucket_2')
event.create('minecraft:bucket_3')
    .texture('forgedingears:item/bucket_3')
event.create('minecraft:bucket_4')
    .texture('forgedingears:item/bucket_4')
event.create('minecraft:bucket_5')
    .texture('forgedingears:item/bucket_5')
event.create('minecraft:bucket_6')
    .texture('forgedingears:item/bucket_6')
event.create('minecraft:bucket_7')
    .texture('forgedingears:item/bucket_7')
event.create('minecraft:bucket_8')
    .texture('forgedingears:item/bucket_8')
event.create('minecraft:bucket_9')
    .texture('forgedingears:item/bucket_9')
event.create('minecraft:bucket_10')
    .texture('forgedingears:item/bucket_10')
})

